# Generated by Django 3.0.4 on 2020-04-05 13:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('is_deleted', models.BooleanField(default=False, editable=False, verbose_name='is deleted?')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('show_title', models.BooleanField(default=False, help_text='Show Mr or Mrs in front of name', verbose_name='Show title')),
                ('show_name_only', models.BooleanField(default=False, help_text='Show name only without academic title', verbose_name='Show name only')),
                ('title', models.CharField(blank=True, max_length=256, null=True, verbose_name='Title')),
                ('fullname', models.CharField(max_length=256, verbose_name='Full name')),
                ('nickname', models.CharField(blank=True, max_length=256, null=True, verbose_name='Nick name')),
                ('front_title', models.CharField(blank=True, help_text='Academic title prefix, eg: Dr or Prof. Dr', max_length=256, null=True, verbose_name='Front title')),
                ('back_title', models.CharField(blank=True, help_text='Academic title suffix, eg: Phd', max_length=256, null=True, verbose_name='Back title')),
                ('gender', models.CharField(choices=[('M', 'MALE'), ('F', 'FEMALE')], default='M', max_length=1, verbose_name='Gender')),
                ('religion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Religion')),
                ('nation', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nation')),
                ('date_of_birth', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='Date of birth')),
                ('place_of_birth', models.CharField(blank=True, max_length=255, null=True, verbose_name='Place of birth')),
                ('is_employee_applicant', models.BooleanField(default=False, verbose_name='Employee applicant')),
                ('is_partner_applicant', models.BooleanField(default=False, verbose_name='Partner applicant')),
                ('account', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL, verbose_name='User account')),
                ('deleted_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='person_deleter', to=settings.AUTH_USER_MODEL, verbose_name='deleter')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
                'permissions': (('export_person', 'Can export Person'), ('import_person', 'Can import Person'), ('change_status_person', 'Can change status Person')),
            },
        ),
        migrations.CreateModel(
            name='PersonContact',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('is_deleted', models.BooleanField(default=False, editable=False, verbose_name='is deleted?')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('phone', models.CharField(blank=True, max_length=128, null=True, verbose_name='Phone')),
                ('fax', models.CharField(blank=True, max_length=128, null=True, verbose_name='Fax')),
                ('whatsapp', models.CharField(blank=True, max_length=128, null=True, verbose_name='Whatsapp')),
                ('email', models.EmailField(blank=True, max_length=128, null=True, verbose_name='Email')),
                ('website', models.CharField(blank=True, max_length=128, null=True, verbose_name='Website')),
                ('facebook', models.URLField(blank=True, help_text='Facebook page URL', null=True)),
                ('twitter', models.CharField(blank=True, help_text='twitter username, without the @', max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, help_text='Instagram username, without the @', max_length=255, null=True)),
                ('youtube', models.URLField(blank=True, help_text='YouTube channel or user account URL', null=True)),
                ('deleted_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personcontact_deleter', to=settings.AUTH_USER_MODEL, verbose_name='deleter')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='contact', to='django_personals.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Person Contact',
                'verbose_name_plural': 'Person Contacts',
            },
        ),
        migrations.CreateModel(
            name='PersonAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='uuid')),
                ('is_deleted', models.BooleanField(default=False, editable=False, verbose_name='is deleted?')),
                ('deleted_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('modified_at', models.DateTimeField(blank=True, editable=False, null=True)),
                ('street', models.CharField(blank=True, max_length=512, null=True, verbose_name='Street')),
                ('city', models.CharField(blank=True, max_length=128, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, max_length=128, null=True, verbose_name='Province')),
                ('country', models.CharField(blank=True, max_length=128, null=True, verbose_name='Country')),
                ('zipcode', models.CharField(blank=True, max_length=128, null=True, verbose_name='Zip Code')),
                ('is_primary', models.BooleanField(default=True, verbose_name='Primary')),
                ('name', models.CharField(help_text='E.g. Home Address or Office Address', max_length=256, null=True, verbose_name='Name')),
                ('deleted_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='personaddress_deleter', to=settings.AUTH_USER_MODEL, verbose_name='deleter')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='django_personals.Person', verbose_name='Person')),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Address',
            },
        ),
    ]
